{"ast":null,"code":"var _jsxFileName = \"/home/javier/Compartidos/VScode_projects/react/preuba_gui/src/components/ProcessTree/ProcessTree.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./processtree_style.css\";\nimport Tree from './Tree';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProcessTree({\n  back_button\n}) {\n  _s();\n  let [nodes, set_nodes] = useState([]);\n  let [edges, set_edges] = useState([]);\n  let [elm_list, set_elm_list] = useState([/*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]);\n  useEffect(() => {\n    let algo = fetch(\"http://localhost:1200/all_pids\");\n    algo.then(res => {\n      res.json().then(obj => {\n        let options = [];\n        for (let i = 0; i < obj.length; i++) {\n          let on_click = () => {\n            let algo = fetch(\"http://localhost:1200/process_info\", {\n              body: obj[i].Pid\n            });\n            algo.then(res => {\n              res.json().then(obj => {\n                let counter = 1;\n                const nodes = [{\n                  id: counter,\n                  label: `pid:${obj.Pid}\\n${obj.Name}`\n                }];\n                // const edges = [{ from: 1, to: 3 },];\n                const edges = [];\n                let recursive_to_child = (parent, child) => {\n                  nodes.push({\n                    id: counter++,\n                    label: `pid:${child.Pid}\\n${child.Name}`\n                  });\n                  edges.push({\n                    from: parent,\n                    to: counter\n                  });\n                  for (let i = 0; i < child.Childs.length; i++) {\n                    recursive_to_child(counter, child.Childs[i]);\n                  }\n                };\n                for (let i = 0; i < obj.Childs.length; i++) {\n                  recursive_to_child(counter, obj.Childs[i]);\n                }\n                set_nodes(nodes);\n                set_edges(edges);\n              });\n            });\n          };\n          options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n            value: obj[i].Pid,\n            onClick: on_click,\n            children: obj[i].Pid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 34\n          }, this));\n        }\n        set_elm_list(options);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"processtree-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: back_button,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"process-pid-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Proceess pid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"select-pid\",\n        children: [\" \", elm_list]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tree, {\n      edges: edges,\n      nodes: nodes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, this);\n}\n_s(ProcessTree, \"Tka3u+KFhPtcxlf9uIHpRlb6kBg=\");\n_c = ProcessTree;\nexport default ProcessTree;\nvar _c;\n$RefreshReg$(_c, \"ProcessTree\");","map":{"version":3,"names":["React","useEffect","useState","Tree","Fragment","_Fragment","jsxDEV","_jsxDEV","ProcessTree","back_button","_s","nodes","set_nodes","edges","set_edges","elm_list","set_elm_list","algo","fetch","then","res","json","obj","options","i","length","on_click","body","Pid","counter","id","label","Name","recursive_to_child","parent","child","push","from","to","Childs","value","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","_c","$RefreshReg$"],"sources":["/home/javier/Compartidos/VScode_projects/react/preuba_gui/src/components/ProcessTree/ProcessTree.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./processtree_style.css\"\nimport Tree from './Tree';\ninterface Params{\n    back_button:()=>void\n}\n\n\nfunction ProcessTree({back_button}:Params){\n    let [nodes,set_nodes] = useState([] as { id: number; label: string; }[])\n    let [edges,set_edges] = useState([] as { from: number; to: number; }[])\n    let [elm_list,set_elm_list] = useState([<></>])\n    useEffect(() => {\n        let algo = fetch(\"http://localhost:1200/all_pids\")\n        algo.then((res)=>{\n            res.json().then((obj)=>{\n                let options = [] \n                for (let i=0;i<obj.length;i++) {\n                    let on_click = ()=>{\n                        let algo = fetch(\"http://localhost:1200/process_info\",{body:obj[i].Pid})\n                        algo.then((res)=>{\n                            res.json().then((obj)=>{\n                                let counter = 1\n                                const nodes = [{ id: counter, label: `pid:${obj.Pid}\\n${obj.Name}` }];\n                                // const edges = [{ from: 1, to: 3 },];\n                                const edges = [] as { from: number; to: number; }[];\n                                let recursive_to_child = (parent:number,child:any)=>{\n                                    nodes.push({ id: counter++, label: `pid:${child.Pid}\\n${child.Name}` })\n                                    edges.push({ from: parent, to: counter})\n                                    for (let i=0;i<child.Childs.length;i++) {\n                                        recursive_to_child(counter,child.Childs[i])\n                                    }\n                                }\n                                for (let i=0;i<obj.Childs.length;i++) {\n                                    recursive_to_child(counter,obj.Childs[i])\n                                }\n                                set_nodes(nodes)\n                                set_edges(edges)\n                            })\n                        })\n                      }\n                    options.push(<option value={obj[i].Pid} onClick={on_click}>{obj[i].Pid}</option>)\n                }\n                set_elm_list(options)\n            })\n        })\n      }, []);\n      \n    return <div className='processtree-page'>\n        <button onClick={back_button}>Back</button>\n            <div className='process-pid-select'>\n                <p>Proceess pid</p>\n                <select name=\"select-pid\"> {elm_list}</select>\n            </div>\n            <Tree edges={edges} nodes={nodes}></Tree>\n    </div>\n}\n\nexport default ProcessTree;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}