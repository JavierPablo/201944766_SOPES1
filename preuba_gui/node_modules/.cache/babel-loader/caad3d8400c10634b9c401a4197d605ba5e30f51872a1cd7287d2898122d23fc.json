{"ast":null,"code":"var _jsxFileName = \"/home/javier/Compartidos/VScode_projects/react/preuba_gui/src/components/RealTimeMonitor/RealTimeMonitor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PieChart from './PieChart';\nimport \"./realtimemonitor_style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RealTimeMonitor({\n  back_button\n}) {\n  _s();\n  let [ram_data, set_ram_data] = useState([0, 100]);\n  let [cpu_data, set_cpu_data] = useState([0, 100]);\n  useEffect(() => {\n    // Use setTimeout to update the message after 2000 milliseconds (2 seconds)\n    const timeoutId = setTimeout(() => {\n      setMessage('Delayed message after 2 seconds!');\n    }, 2000);\n\n    // Cleanup function to clear the timeout if the component unmounts\n    return () => clearTimeout(timeoutId);\n  }, []);\n  setTimeout(() => {\n    let algo = fetch(\"http://localhost:1200/realtime\");\n    algo.then(res => {\n      res.json().then(obj => {\n        set_ram_data([obj.ram, 100 - obj.ram]);\n        set_cpu_data([obj.cpu, 100 - obj.cpu]);\n      });\n    });\n  }, 2000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"realtimemonitor-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: back_button,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-realtimemonitor\",\n      children: [/*#__PURE__*/_jsxDEV(PieChart, {\n        data_set: cpu_data,\n        title: \"CPU Usage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n        data_set: ram_data,\n        title: \"RAM Usage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n}\n_s(RealTimeMonitor, \"+ARl8QBbjqUIpUNh6/jeHj30DcE=\");\n_c = RealTimeMonitor;\nexport default RealTimeMonitor;\nvar _c;\n$RefreshReg$(_c, \"RealTimeMonitor\");","map":{"version":3,"names":["React","useState","PieChart","jsxDEV","_jsxDEV","RealTimeMonitor","back_button","_s","ram_data","set_ram_data","cpu_data","set_cpu_data","useEffect","timeoutId","setTimeout","setMessage","clearTimeout","algo","fetch","then","res","json","obj","ram","cpu","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","data_set","title","_c","$RefreshReg$"],"sources":["/home/javier/Compartidos/VScode_projects/react/preuba_gui/src/components/RealTimeMonitor/RealTimeMonitor.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PieChart from './PieChart';\nimport \"./realtimemonitor_style.css\"\n\n\n\ninterface Params{\n    back_button:()=>void\n}\n\nfunction RealTimeMonitor({back_button}:Params){\n    \n    let [ram_data,set_ram_data] = useState([0,100])\n    let [cpu_data,set_cpu_data] = useState([0,100])\n    useEffect(() => {\n        // Use setTimeout to update the message after 2000 milliseconds (2 seconds)\n        const timeoutId = setTimeout(() => {\n          setMessage('Delayed message after 2 seconds!');\n        }, 2000);\n    \n        // Cleanup function to clear the timeout if the component unmounts\n        return () => clearTimeout(timeoutId);\n      }, []);\n    setTimeout(() => {\n        let algo = fetch(\"http://localhost:1200/realtime\")\n        algo.then((res)=>{\n            res.json().then((obj)=>{\n                set_ram_data([obj.ram,100-obj.ram])\n                set_cpu_data([obj.cpu,100-obj.cpu])  \n            })\n        })\n    }, 2000);\n\n    return <div className='realtimemonitor-page'>\n        <button onClick={back_button}>Back</button>\n        <div className='container-realtimemonitor'>\n            <PieChart data_set={cpu_data} title={\"CPU Usage\"}></PieChart>\n            <PieChart data_set={ram_data} title={\"RAM Usage\"}></PieChart>\n        </div>\n    </div>\n}\n\nexport default RealTimeMonitor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQpC,SAASC,eAAeA,CAAC;EAACC;AAAkB,CAAC,EAAC;EAAAC,EAAA;EAE1C,IAAI,CAACC,QAAQ,EAACC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,EAAC,GAAG,CAAC,CAAC;EAC/C,IAAI,CAACS,QAAQ,EAACC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,EAAC,GAAG,CAAC,CAAC;EAC/CW,SAAS,CAAC,MAAM;IACZ;IACA,MAAMC,SAAS,GAAGC,UAAU,CAAC,MAAM;MACjCC,UAAU,CAAC,kCAAkC,CAAC;IAChD,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMC,YAAY,CAACH,SAAS,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EACRC,UAAU,CAAC,MAAM;IACb,IAAIG,IAAI,GAAGC,KAAK,CAAC,gCAAgC,CAAC;IAClDD,IAAI,CAACE,IAAI,CAAEC,GAAG,IAAG;MACbA,GAAG,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAAEG,GAAG,IAAG;QACnBb,YAAY,CAAC,CAACa,GAAG,CAACC,GAAG,EAAC,GAAG,GAACD,GAAG,CAACC,GAAG,CAAC,CAAC;QACnCZ,YAAY,CAAC,CAACW,GAAG,CAACE,GAAG,EAAC,GAAG,GAACF,GAAG,CAACE,GAAG,CAAC,CAAC;MACvC,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,EAAE,IAAI,CAAC;EAER,oBAAOpB,OAAA;IAAKqB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACxCtB,OAAA;MAAQuB,OAAO,EAAErB,WAAY;MAAAoB,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3C3B,OAAA;MAAKqB,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACtCtB,OAAA,CAACF,QAAQ;QAAC8B,QAAQ,EAAEtB,QAAS;QAACuB,KAAK,EAAE;MAAY;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eAC7D3B,OAAA,CAACF,QAAQ;QAAC8B,QAAQ,EAAExB,QAAS;QAACyB,KAAK,EAAE;MAAY;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AACV;AAACxB,EAAA,CA9BQF,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AAgCxB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}