{"ast":null,"code":"var _jsxFileName = \"/home/javier/Compartidos/VScode_projects/react/preuba_gui/src/components/RealTimeMonitor/PieChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PieChart({\n  data\n}) {\n  _s();\n  var options = {\n    responsive: false,\n    maintainAspectRatio: false,\n    legend: {\n      position: 'top'\n    }\n  };\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (!chartRef.current) return;\n    const ctx = chartRef.current.getContext('2d');\n    let chart = new Chart(ctx, {\n      type: 'pie',\n      data: data,\n      options: options\n    });\n    return () => {\n      chart.destroy();\n    };\n  }, [data, options]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n}\n_s(PieChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = PieChart;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","PieChart","data","_s","options","responsive","maintainAspectRatio","legend","position","chartRef","current","ctx","getContext","chart","type","destroy","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/javier/Compartidos/VScode_projects/react/preuba_gui/src/components/RealTimeMonitor/PieChart.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\ninterface Params {\n    data: any\n}\nfunction PieChart({ data }: Params) {\n    var options = {\n        responsive: false,\n        maintainAspectRatio: false,\n        legend: {\n            position: 'top',\n        }\n    };\n    const chartRef = useRef<HTMLCanvasElement>(null);\n    useEffect(() => {\n        if (!chartRef.current) return;\n        const ctx: CanvasRenderingContext2D = chartRef.current.getContext('2d') as CanvasRenderingContext2D;\n        let chart = new Chart(ctx, {\n            type: 'pie',\n            data: data,\n            options: options,\n        });\n        return () => {\n            chart.destroy();\n        };\n    }, [data, options]);\n\n    return <canvas ref={chartRef} />;\n}\n\nexport default PieChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAkB,OAAO;AAC1D,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIlC,SAASC,QAAQA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAChC,IAAIC,OAAO,GAAG;IACVC,UAAU,EAAE,KAAK;IACjBC,mBAAmB,EAAE,KAAK;IAC1BC,MAAM,EAAE;MACJC,QAAQ,EAAE;IACd;EACJ,CAAC;EACD,MAAMC,QAAQ,GAAGZ,MAAM,CAAoB,IAAI,CAAC;EAChDD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACa,QAAQ,CAACC,OAAO,EAAE;IACvB,MAAMC,GAA6B,GAAGF,QAAQ,CAACC,OAAO,CAACE,UAAU,CAAC,IAAI,CAA6B;IACnG,IAAIC,KAAK,GAAG,IAAIf,KAAK,CAACa,GAAG,EAAE;MACvBG,IAAI,EAAE,KAAK;MACXZ,IAAI,EAAEA,IAAI;MACVE,OAAO,EAAEA;IACb,CAAC,CAAC;IACF,OAAO,MAAM;MACTS,KAAK,CAACE,OAAO,CAAC,CAAC;IACnB,CAAC;EACL,CAAC,EAAE,CAACb,IAAI,EAAEE,OAAO,CAAC,CAAC;EAEnB,oBAAOJ,OAAA;IAAQgB,GAAG,EAAEP;EAAS;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpC;AAACjB,EAAA,CAvBQF,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAyBjB,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}