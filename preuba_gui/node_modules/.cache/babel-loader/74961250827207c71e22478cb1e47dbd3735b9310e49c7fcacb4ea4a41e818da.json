{"ast":null,"code":"var _jsxFileName = \"/home/javier/Compartidos/VScode_projects/react/preuba_gui/src/components/ProcessTree/Tree.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Network } from 'vis-network';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tree({}) {\n  _s();\n  const visJsRef = useRef(null);\n  useEffect(() => {\n    const nodes = [{\n      id: 1,\n      label: \"Node 1\"\n    }, {\n      id: 2,\n      label: \"Node 2\"\n    }, {\n      id: 3,\n      label: \"Node 3\"\n    }, {\n      id: 4,\n      label: \"Node 4\"\n    }, {\n      id: 5,\n      label: \"Node 5\"\n    }];\n    const edges = [{\n      from: 1,\n      to: 3\n    }, {\n      from: 1,\n      to: 2\n    }, {\n      from: 2,\n      to: 4\n    }, {\n      from: 2,\n      to: 5\n    }, {\n      from: 3,\n      to: 3\n    }];\n    if (!visJsRef.current) return;\n    const network = new Network(visJsRef.current, {\n      nodes,\n      edges\n    });\n    return () => {\n      network.destroy();\n    };\n  }, [visJsRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: visJsRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Tree, \"Qy7C7rs48YiyliZdEk1rIfMPjhA=\");\n_c = Tree;\nexport default Tree;\nvar _c;\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"names":["React","useEffect","useRef","Network","jsxDEV","_jsxDEV","Tree","_s","visJsRef","nodes","id","label","edges","from","to","current","network","destroy","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/javier/Compartidos/VScode_projects/react/preuba_gui/src/components/ProcessTree/Tree.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Network } from 'vis-network';\n\ninterface Params{\n    \n}\n\n\nfunction Tree({}:Params){    \n    const visJsRef = useRef<HTMLDivElement>(null);\n\tuseEffect(() => {\n        const nodes = [\n            { id: 1, label: \"Node 1\" },\n            { id: 2, label: \"Node 2\" },\n            { id: 3, label: \"Node 3\" },\n            { id: 4, label: \"Node 4\" },\n            { id: 5, label: \"Node 5\" },\n        ];\n    \n        const edges = [\n            { from: 1, to: 3 },\n            { from: 1, to: 2 },\n            { from: 2, to: 4 },\n            { from: 2, to: 5 },\n            { from: 3, to: 3 },\n        ];\n        if (!visJsRef.current) return;\n\n        const network = new Network(visJsRef.current, { nodes, edges } );\t\n        return () => {\n            network.destroy()\n        };\n    }, [visJsRef]);\n        \n\treturn <div ref={visJsRef} />;\n}\n\nexport default Tree;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAkB,OAAO;AAC1D,SAASC,OAAO,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOtC,SAASC,IAAIA,CAAC,CAAQ,CAAC,EAAC;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGN,MAAM,CAAiB,IAAI,CAAC;EAChDD,SAAS,CAAC,MAAM;IACT,MAAMQ,KAAK,GAAG,CACV;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,EAC1B;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,EAC1B;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,EAC1B;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,EAC1B;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAC7B;IAED,MAAMC,KAAK,GAAG,CACV;MAAEC,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,EAClB;MAAED,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,EAClB;MAAED,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,EAClB;MAAED,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,EAClB;MAAED,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,CACrB;IACD,IAAI,CAACN,QAAQ,CAACO,OAAO,EAAE;IAEvB,MAAMC,OAAO,GAAG,IAAIb,OAAO,CAACK,QAAQ,CAACO,OAAO,EAAE;MAAEN,KAAK;MAAEG;IAAM,CAAE,CAAC;IAChE,OAAO,MAAM;MACTI,OAAO,CAACC,OAAO,CAAC,CAAC;IACrB,CAAC;EACL,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEjB,oBAAOH,OAAA;IAAKa,GAAG,EAAEV;EAAS;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9B;AAACf,EAAA,CA3BQD,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AA6Bb,eAAeA,IAAI;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}