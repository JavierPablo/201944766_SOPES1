{"ast":null,"code":"var _jsxFileName = \"/home/javier/Compartidos/VScode_projects/react/preuba_gui/src/components/HistoricMonitor/HistoricMonitor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./historicaltimemonitor_style.css\";\nimport LineChart from './LineChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HistoricMonitor({\n  back_button\n}) {\n  _s();\n  let [ram_data, set_ram_data] = useState([]);\n  let [cpu_data, set_cpu_data] = useState([]);\n  useEffect(() => {\n    let algo = fetch(\"http://localhost:1200/historical\");\n    algo.then(res => {\n      res.json().then(obj => {\n        let rams = [];\n        let cpus = [];\n        for (let i = 0; i < obj.length; i++) {\n          rams.push(obj[i].Ram);\n          cpus.push(obj[i].Cpu);\n        }\n        set_ram_data(rams);\n        set_cpu_data(cpus);\n      });\n    });\n  }, [ram_data, cpu_data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"realtimemonitor-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: back_button,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-realtimemonitor\",\n      children: [/*#__PURE__*/_jsxDEV(LineChart, {\n        data_set: data,\n        title: \"CPU Usage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        data_set: data,\n        title: \"RAM Usage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n}\n_s(HistoricMonitor, \"KmpGLWBHdFzWV+D58obQ40J0+v8=\");\n_c = HistoricMonitor;\nexport default HistoricMonitor;\nvar _c;\n$RefreshReg$(_c, \"HistoricMonitor\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","jsxDEV","_jsxDEV","HistoricMonitor","back_button","_s","ram_data","set_ram_data","cpu_data","set_cpu_data","algo","fetch","then","res","json","obj","rams","cpus","i","length","push","Ram","Cpu","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","data_set","data","title","_c","$RefreshReg$"],"sources":["/home/javier/Compartidos/VScode_projects/react/preuba_gui/src/components/HistoricMonitor/HistoricMonitor.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./historicaltimemonitor_style.css\"\nimport LineChart from './LineChart';\n\n\n\n\ninterface Params{\n    back_button:()=>void\n}\n\nfunction HistoricMonitor({back_button}:Params){\n    \n    let [ram_data,set_ram_data] = useState([])\n    let [cpu_data,set_cpu_data] = useState([])\n\n    useEffect(() => {\n        \n        let algo = fetch(\"http://localhost:1200/historical\")\n        algo.then((res)=>{\n            res.json().then((obj)=>{\n                let rams = []\n                let cpus = []\n                for (let i=0;i<obj.length;i++) {\n                    rams.push(obj[i].Ram)\n                    cpus.push(obj[i].Cpu)\n                }\n                set_ram_data(rams)\n                set_cpu_data(cpus)\n            })\n        })\n        \n        \n      }, [ram_data,cpu_data]);\n\n    return <div className='realtimemonitor-page'>\n        <button onClick={back_button}>Back</button>\n        <div className='container-realtimemonitor'>\n            <LineChart data_set={data} title={\"CPU Usage\"}></LineChart>\n            <LineChart data_set={data} title={\"RAM Usage\"}></LineChart>\n        </div>\n    </div>\n}\n\nexport default HistoricMonitor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,mCAAmC;AAC1C,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASpC,SAASC,eAAeA,CAAC;EAACC;AAAkB,CAAC,EAAC;EAAAC,EAAA;EAE1C,IAAI,CAACC,QAAQ,EAACC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,IAAI,CAACS,QAAQ,EAACC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IAEZ,IAAIY,IAAI,GAAGC,KAAK,CAAC,kCAAkC,CAAC;IACpDD,IAAI,CAACE,IAAI,CAAEC,GAAG,IAAG;MACbA,GAAG,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAAEG,GAAG,IAAG;QACnB,IAAIC,IAAI,GAAG,EAAE;QACb,IAAIC,IAAI,GAAG,EAAE;QACb,KAAK,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACH,GAAG,CAACI,MAAM,EAACD,CAAC,EAAE,EAAE;UAC3BF,IAAI,CAACI,IAAI,CAACL,GAAG,CAACG,CAAC,CAAC,CAACG,GAAG,CAAC;UACrBJ,IAAI,CAACG,IAAI,CAACL,GAAG,CAACG,CAAC,CAAC,CAACI,GAAG,CAAC;QACzB;QACAf,YAAY,CAACS,IAAI,CAAC;QAClBP,YAAY,CAACQ,IAAI,CAAC;MACtB,CAAC,CAAC;IACN,CAAC,CAAC;EAGJ,CAAC,EAAE,CAACX,QAAQ,EAACE,QAAQ,CAAC,CAAC;EAEzB,oBAAON,OAAA;IAAKqB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACxCtB,OAAA;MAAQuB,OAAO,EAAErB,WAAY;MAAAoB,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3C3B,OAAA;MAAKqB,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACtCtB,OAAA,CAACF,SAAS;QAAC8B,QAAQ,EAAEC,IAAK;QAACC,KAAK,EAAE;MAAY;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC3D3B,OAAA,CAACF,SAAS;QAAC8B,QAAQ,EAAEC,IAAK;QAACC,KAAK,EAAE;MAAY;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AACV;AAACxB,EAAA,CA/BQF,eAAe;AAAA8B,EAAA,GAAf9B,eAAe;AAiCxB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}